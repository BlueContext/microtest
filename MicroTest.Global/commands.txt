   sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-add-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
sudo usermod -aG docker kbaker

Import-Module ADDSDeployment
Install-ADDSForest -CreateDnsDelegation:$false -DatabasePath C:\Windows\NTDS -DomainMode WinThreshold -DomainName kosmopress.com -DomainNetbiosName KOSMOPRESS -ForestMode WinThreshold -InstallDns:$true -LogPath C:\Windows\NTDS -NoRebootOnCompletion:$true -SysVolPath C:\Windows\SYSVOL -Force:$true

docker swarm init --advertise-addr 10.0.0.11:2377 --listen-addr 10.0.0.11:2377
docker swarm join --token SWMTKN-1-5qul7alg1plqk5ew0a86vsdmngh2wlbg1exsh6cx57efeks0x4-24dtkncz4ga3ngaly12al1eoe 10.0.0.11:2377 --advertise-addr 10.0.0.12:2377 --listen-addr 10.0.0.12:2377
docker swarm join --token SWMTKN-1-5qul7alg1plqk5ew0a86vsdmngh2wlbg1exsh6cx57efeks0x4-24dtkncz4ga3ngaly12al1eoe 10.0.0.11:2377 --advertise-addr 10.0.0.13:2377 --listen-addr 10.0.0.13:2377

docker swarm join --token SWMTKN-1-5qul7alg1plqk5ew0a86vsdmngh2wlbg1exsh6cx57efeks0x4-d1pdxrxudg79lfubvo1ktan54 10.0.0.13:2377 --advertise-addr 10.0.0.14:2377 --listen-addr 10.0.0.14:2377
docker swarm join --token SWMTKN-1-5qul7alg1plqk5ew0a86vsdmngh2wlbg1exsh6cx57efeks0x4-d1pdxrxudg79lfubvo1ktan54 10.0.0.13:2377 --advertise-addr 10.0.0.15:2377 --listen-addr 10.0.0.15:2377
docker swarm join --token SWMTKN-1-5qul7alg1plqk5ew0a86vsdmngh2wlbg1exsh6cx57efeks0x4-d1pdxrxudg79lfubvo1ktan54 10.0.0.13:2377 --advertise-addr 10.0.0.16:2377 --listen-addr 10.0.0.16:2377

docker network create -d overlay ms-overlay --subnet 10.10.10.0/24

docker build -t microtest.api .
docker build -t microtest.fileapi .

docker push

docker service create -d -p 8080:15672 --name mt-mq --replicas 1 --network ms-overlay rabbitmq:3-management
docker service create -d -p 8081:80 -p 8082:5000 --name mt-api --replicas 1 --network ms-overlay microtest.api:latest
docker service create -d -p 8088:80 -p 8089:5000 --name mt-fileapi --replicas 1 --network ms-overlay microtest.fileapi:latest

gMSA Properties
Name:	WinDockerSwarm
DnsHostName: WinDockerSwarm.kosmopress.com 
SPNs:	"host/WinDockerSwarm", "host/WinDockerSwarm.kosmopress.com"
PrincipalsAllowedToRetrieveManagedPassword: DockerHosts

# Create the gMSA
New-ADServiceAccount -Name "WinDockerSwarm" -DnsHostName "WinDockerSwarm.kosmopress.com" -ServicePrincipalNames "host/WinDockerSwarm", "host/WinDockerSwarm.kosmopress.com" -PrincipalsAllowedToRetrieveManagedPassword "DockerHosts"

# Add your container hosts to the security group
Add-ADGroupMember -Identity "WebApp01Hosts" -Members "ContainerHost01", "ContainerHost02", "ContainerHost03"
 
New-SmbShare -Name Drop -Path c:\shares\drop -FullAccess "Everyone"


#Adding a new disk for data in Ubuntu 
sudo fdisk -l
#Partition
sudo fdisk /dev/sdb
p
n   p
w
#Format
sudo mkfs.ext4 /dev/sdb
#Mount
sudo mkdir /mnt/sdb
sudo mount /dev/sdb /mnt/sdb
#Automount
nano /etc/fstab
(append this line:)
/dev/sdb  /mnt/sdb  ext4  defaults  0  0

#Change Docker data directory (using a systemd drop-in file that will allow the change to survive upgrades -- this only works on ubuntu)
cd /etc/systemd/system/
mkdir docker.service.d
sudo nano /etc/systemd/system/docker.service.d/docker.root.conf

#add the following:
[Service]
ExecStart=
ExecStart=/usr/bin/dockerd -g [/you/new/docker/root] -H fd://

#save and exit

systemctl daemon-reload
systemctl restart docker
docker info




#Setting up a Docker Registry

docker service create --name registry --constraint 'node.labels.registry==true' -e REGISTRY_HTTP_ADDR=0.0.0.0:5000 --publish 5000:5000 --replicas 1 registry:2
